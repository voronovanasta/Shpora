import { Layout, Typography } from 'antd';
const style = { textAlign: 'left', width: '100%', marginBottom: '10px' };

const { Title, Paragraph, Link } = Typography;
export function FormPage() {
  return (
    <Layout style={{ padding: '10px' }}>
      <Title level={3}> Form </Title>
      <Paragraph style={style}>
        {' '}
        –í React —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
        –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞. –ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        —Ñ–æ—Ä–º –≤ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:
      </Paragraph>
      <Paragraph style={style} strong>
        {' '}
        –£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ–æ—Ä–º:
      </Paragraph>
      <Paragraph style={style}>
        {' '}
        –í —ç—Ç–æ–º –ø–æ–¥—Ö–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ö–∞–∂–¥–æ–µ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã
        —Å–≤—è–∑–∞–Ω–æ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ callback-—Ñ—É–Ω–∫—Ü–∏—é.
      </Paragraph>
      <Paragraph style={style} strong>
        {' '}
        –ù–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ–æ—Ä–º:
      </Paragraph>
      <Paragraph style={style}>
        {' '}
        –í —ç—Ç–æ–º –ø–æ–¥—Ö–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ DOM, –∞ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
      </Paragraph>
      <Paragraph style={style} strong>
        {' '}
        Ref-–ø–æ–¥—Ö–æ–¥:
      </Paragraph>
      <Paragraph style={style}>
        {' '}
        –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã —Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ ref, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø
        –∫ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞–º. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–æ–±–µ–Ω (–Ω–µ—Çüòê), –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∏—Ç—å
        –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –±–µ–∑ —è–≤–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Ö –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
      </Paragraph>
      <Paragraph style={style} strong>
        {' '}
        –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞–º–∏:
      </Paragraph>
      <Paragraph style={style}>
        {' '}
        –°—É—â–µ—Å—Ç–≤—É—é—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ React Hook Form –∏ Formik , –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –±–æ–ª–µ–µ
        –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏. –û–Ω–∏ —É–ø—Ä–æ—â–∞—é—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º,
        –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π, –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –¥—Ä—É–≥–∏–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏.
      </Paragraph>
      <Title level={3}> React Hook Form </Title>
      <Link href='https://react-hook-form.com/' target='_blank'>
        {' '}
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è{' '}
      </Link>
      <Paragraph style={style}>
        <pre>
          {`
//—É—Å—Ç–∞–Ω–æ–≤–∫–∞
npm install react-hook-form

//–∏–º–ø–æ—Ä—Ç
import { useForm } from 'react-hook-form'

//–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—É–∫–∞

const { register, handleSubmit, formState: { errors } } = useForm()

//—Å–æ–∑–¥–∞–Ω–∏–µ

<form onSubmit={handleSubmit(onSubmit)}>
  {/* –ü–æ–ª—è —Ñ–æ—Ä–º—ã */}
  <input
  type='number'
  {...register('age', {
    required: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
    min: {
     value: 18,
     message: '–í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18 –ª–µ—Ç –∏–ª–∏ –±–æ–ª—å—à–µ'
    }
   })}
 />
<p>{errors.age?.message}</p>
<button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
</form>

//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

const onSubmit = (data) => {
  console.log(data);
};

//–ü–æ–ª–µ —Å —Ç–∏–ø–æ–º radio –∏–ª–∏ checkbox:
<input type="radio" {...register('gender', { required: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª' })} value="male" />
<input type="radio" {...register('gender', { required: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª' })} value="female" />

`}
        </pre>
      </Paragraph>
      <Paragraph style={style} strong mark>
        {' '}
        Controller{' '}
      </Paragraph>
      <Paragraph style={style} strong mark>
        {' '}
        –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Controller:{' '}
      </Paragraph>
      <Paragraph style={style}> - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ (ANTD –∏–ª–∏ MUI) </Paragraph>
      <Paragraph style={style}>
        {' '}
        - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        –≤–∞–ª–∏–¥–∞—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ yup –∏–ª–∏ joi, Controller –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø—Ä–∞–≤–∏–ª–∞
        –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å —Ñ–æ—Ä–º–æ–π.
      </Paragraph>
      <Paragraph style={style}> –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ React Hook Form + ANTD + yup</Paragraph>
      <Paragraph style={style}>
        <pre>
          {`
import React from 'react';
import { useForm, Controller } from 'react-hook-form';
import { Input, Radio, Checkbox, DatePicker, Button } from 'antd';
import 'antd/dist/antd.css';
import * as yup from 'yup';

const schema = yup.object().shape({
  email: yup.string().required('–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è').email('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'),
  text: yup.string().required('–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è'),
  number: yup.number().required('–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è'),
  gender: yup.string().required('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª'),
  checkbox: yup.boolean().oneOf([true], '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä'),
  date: yup.date().required('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É'),
});

const App = () => {
  const { handleSubmit, control, formState: { errors } } = useForm({
    resolver: yupResolver(schema),
  });

  const onSubmit = (data) => {
    console.log(data);
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <div>
        <label>Email:</label>
        <Controller
          name="email"
          control={control}
          render={({ field }) => <Input {...field} placeholder="Email" />}
        />
        <p>{errors.email?.message}</p>
      </div>

      <div>
        <label>–¢–µ–∫—Å—Ç:</label>
        <Controller
          name="text"
          control={control}
          render={({ field }) => <Input {...field} placeholder="–¢–µ–∫—Å—Ç" />}
        />
        <p>{errors.text?.message}</p>
      </div>

      <div>
        <label>–ß–∏—Å–ª–æ:</label>
        <Controller
          name="number"
          control={control}
          render={({ field }) => <Input type="number" {...field} placeholder="–ß–∏—Å–ª–æ" />}
        />
        <p>{errors.number?.message}</p>
      </div>

      <div>
        <label>–ü–æ–ª:</label>
        <Controller
          name="gender"
          control={control}
          render={({ field }) => (
            <Radio.Group {...field}>
              <Radio value="male">–ú—É–∂—Å–∫–æ–π</Radio>
              <Radio value="female">–ñ–µ–Ω—Å–∫–∏–π</Radio>
            </Radio.Group>
          )}
        />
        <p>{errors.gender?.message}</p>
      </div>

      <div>
        <label>–ß–µ–∫–±–æ–∫—Å:</label>
        <Controller
          name="checkbox"
          control={control}
          render={({ field }) => <Checkbox {...field}>–Ø —Å–æ–≥–ª–∞—Å–µ–Ω</Checkbox>}
        />
        <p>{errors.checkbox?.message}</p>
      </div>

      <div>
        <label>–î–∞—Ç–∞:</label>
        <Controller
          name="date"
          control={control}
          render={({ field }) => <DatePicker {...field} />}
        />
        <p>{errors.date?.message}</p>
      </div>

      <Button type="primary" htmlType="submit">
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å
      </Button>
    </form>
  );
};

export default App;

`}
        </pre>
      </Paragraph>
      <Title level={3}> Formik</Title>
      <Link href='https://formik.org/docs/overview' target='_blank'>
        {' '}
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è{' '}
      </Link>
      <Paragraph style={style}>
        <pre>
          {`
import React from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';

const RegistrationForm = () => {
  return (
    <Formik
      initialValues={{ username: '', email: '' }}
      onSubmit={(values) => {
        console.log(values);
      }}
    >
      <Form>
        <Field type="text" name="username" placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" />
        <ErrorMessage name="username" component="div" />

        <Field
          type="email"
          name="email"
          placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
          validate={(value) => {
            let error;
            if (!value) {
              error = '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
            } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {
              error = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å';
            }
            return error;
          }}
        />
        <ErrorMessage name="email" component="div" />

        <button type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
      </Form>
    </Formik>
  );
}

export default RegistrationForm;
`}
        </pre>
      </Paragraph>
    </Layout>
  );
}
